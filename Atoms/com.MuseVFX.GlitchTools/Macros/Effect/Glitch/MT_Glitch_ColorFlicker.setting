{
	Tools = ordered() {
		MT_Glitch_ColorFlicker = MacroOperator {
			Inputs = ordered() {
			Comments = Input {
					Value = "Creates a rectangular block artifact. The block's hue, saturation, lightness and position can be set to flicker randomly. \r\n\r\nMuse Tools Library, Glitch Tools Collection\r\nby Bryan Ray.\r\nwww.musevfx.com",
				},
				Input = InstanceInput {
					SourceOp = "inputColorFlicker",
					Source = "Input",
				},
				HueFlicker = InstanceInput {
					SourceOp = "inputColorFlicker",
					Source = "HueFlicker",
					Default = 0,
				},
				SatFlicker = InstanceInput {
					SourceOp = "inputColorFlicker",
					Source = "SaturationFlicker",
					Default = 0,
				},
				LightFlicker = InstanceInput {
					SourceOp = "inputColorFlicker",
					Source = "LightnessFlicker",
					Default = 0,
				},
				PosFlicker = InstanceInput {
					SourceOp = "inputColorFlicker",
					Source = "PositionFlicker",
					Default = 1,
				},
				XSize = InstanceInput {
					SourceOp = "inputColorFlicker",
					Source = "XSize",
					Default = 1,
				},
				YSize = InstanceInput {
					SourceOp = "inputColorFlicker",
					Source = "YSize",
					Default = 1,
				},
				BaseColorR = InstanceInput {
					SourceOp = "baseColor_colorFlicker",
					Source = "TopLeftRed",
					Name = "Base Block Color",
					ControlGroup = 9,
					Default = 0.25,
				},
				BaseColorG = InstanceInput {
					SourceOp = "baseColor_colorFlicker",
					Source = "TopLeftGreen",
					ControlGroup = 9,
					Default = 0,
				},
				BaseColorB = InstanceInput {
					SourceOp = "baseColor_colorFlicker",
					Source = "TopLeftBlue",
					ControlGroup = 9,
					Default = 0,
				},
				BaseColorA = InstanceInput {
					SourceOp = "baseColor_colorFlicker",
					Source = "TopLeftAlpha",
					ControlGroup = 9,
					Default = 1,
				},
				RestPos = InstanceInput {
					SourceOp = "initialPosition",
					Source = "Center",
					Name = "Block Resting Position",
				},
				HueMinOff = InstanceInput {
					SourceOp = "hueSwitch_colorFlicker",
					Source = "MinimumOffTime",
					Name = "Hue Minimum Rest Time",
					Default = 3,
					Page = "Hue Controls",
				},
				HueMaxOff = InstanceInput {
					SourceOp = "hueSwitch_colorFlicker",
					Source = "MaximumOffTime",
					Name = "Hue Maximum Rest Time",
					Default = 10,
				},
				HueMinOn = InstanceInput {
					SourceOp = "hueSwitch_colorFlicker",
					Source = "MinimumOnTime",
					Name = "Hue Minimum Flicker Time",
					Default = 3,
				},
				HueMaxOn = InstanceInput {
					SourceOp = "hueSwitch_colorFlicker",
					Source = "MaximumOnTime",
					Name = "Hue Maximum Flicker Time",
					Default = 10,
				},
				HueRandSeed = InstanceInput {
					SourceOp = "hueSwitch_colorFlicker",
					Source = "RandomSeed",
					Name = "Hue Random Seed",
					Default = 0,
				},
				MinHue = InstanceInput {
					SourceOp = "hueSwitch_colorFlicker",
					Source = "MinimumHue",
					Name = "Minimum Hue Shift",
					Default = 0,
				},
				MaxHue = InstanceInput {
					SourceOp = "hueSwitch_colorFlicker",
					Source = "MaximumHue",
					Name = "Maximum Hue Shift",
					Default = 360,
				},
				SatMinOff = InstanceInput {
					SourceOp = "satSwitch_colorFlicker",
					Source = "MinimumOffTime",
					Name = "Saturation Minimum Rest Time",
					Default = 3,
					Page = "Saturation Controls",
				},
				SatMaxOff = InstanceInput {
					SourceOp = "satSwitch_colorFlicker",
					Source = "MaximumOffTime",
					Name = "Saturation Maximum Rest Time",
					Default = 10,
				},
				SatMinOn = InstanceInput {
					SourceOp = "satSwitch_colorFlicker",
					Source = "MinimumOnTime",
					Name = "Saturation Minimum Flicker Time",
					Default = 3,
				},
				SatMaxOn = InstanceInput {
					SourceOp = "satSwitch_colorFlicker",
					Source = "MaximumOnTime",
					Name = "Saturatiom Maximum Flicker Time",
					Default = 10,
				},
				SatRandSeed = InstanceInput {
					SourceOp = "satSwitch_colorFlicker",
					Source = "RandomSeed",
					Name = "Saturation Random Seed",
					Default = 0,
				},
				MinSat = InstanceInput {
					SourceOp = "satSwitch_colorFlicker",
					Source = "MinimumSaturation",
					Default = 0,
				},
				MaxSat = InstanceInput {
					SourceOp = "satSwitch_colorFlicker",
					Source = "MaximumSaturation",
					Default = 2,
				},
				LightMinOff = InstanceInput {
					SourceOp = "lightnessSwitch_colorFlicker",
					Source = "MinimumOffTime",
					Name = "Lightness Minimum Rest Time",
					Default = 3,
					Page = "Lightness Controls",
				},
				LightMaxOff = InstanceInput {
					SourceOp = "lightnessSwitch_colorFlicker",
					Source = "MaximumOffTime",
					Name = "Lightness Maximum Rest Time",
					Default = 10,
				},
				LightMinOn = InstanceInput {
					SourceOp = "lightnessSwitch_colorFlicker",
					Source = "MinimumOnTime",
					Name = "Lightness Minimum Flicker Time",
					Default = 3,
				},
				LightMaxOn = InstanceInput {
					SourceOp = "lightnessSwitch_colorFlicker",
					Source = "MaximumOnTime",
					Name = "Lightness Maximum Flicker Time",
					Default = 10,
				},
				LightRandSeed = InstanceInput {
					SourceOp = "lightnessSwitch_colorFlicker",
					Source = "RandomSeed",
					Name = "Lightness Random Seed",
					Default = 0,
				},
				MinLight = InstanceInput {
					SourceOp = "lightnessSwitch_colorFlicker",
					Source = "MinimumLightness",
					Default = 0,
				},
				MaxLight = InstanceInput {
					SourceOp = "lightnessSwitch_colorFlicker",
					Source = "MaximumLightness",
					Default = 1,
				},
				XPosMinOff = InstanceInput {
					SourceOp = "xPosSwitch_colorFlicker",
					Source = "MinimumOffTime",
					Name = "X Position Minimum Rest Time",
					Default = 3,
					Page = "Position Controls",
				},
				XPosMaxOff = InstanceInput {
					SourceOp = "xPosSwitch_colorFlicker",
					Source = "MaximumOffTime",
					Name = "X Position Maximum Rest Time",
					Default = 10,
				},
				XPosMinOn = InstanceInput {
					SourceOp = "xPosSwitch_colorFlicker",
					Source = "MinimumOnTime",
					Name = "X Position Minimum Flicker Time",
					Default = 3,
				},
				XPosMaxOn = InstanceInput {
					SourceOp = "xPosSwitch_colorFlicker",
					Source = "MaximumOnTime",
					Name = "X Position Maximum Flicker Time",
					Default = 10,
				},
				XPosRandSeed = InstanceInput {
					SourceOp = "xPosSwitch_colorFlicker",
					Source = "RandomSeed",
					Name = "X Position Random Seed",
					Default = 0.1970588,
				},
				MinX = InstanceInput {
					SourceOp = "xPosSwitch_colorFlicker",
					Source = "MinimumXPosition",
					Default = -0.5,
				},
				MaxX = InstanceInput {
					SourceOp = "xPosSwitch_colorFlicker",
					Source = "MaximumXPosition",
					Default = 1.5,
				},
				YPosMinOff = InstanceInput {
					SourceOp = "yPosSwitch_colorFlicker",
					Source = "MinimumOffTime",
					Name = "Y Position Minimum Rest Time",
					Default = 3,
				},
				YPosMaxOff = InstanceInput {
					SourceOp = "yPosSwitch_colorFlicker",
					Source = "MaximumOffTime",
					Name = "Y Position Maximum Rest Time",
					Default = 10,
				},
				YPosMinOn = InstanceInput {
					SourceOp = "yPosSwitch_colorFlicker",
					Source = "MinimumOnTime",
					Name = "Y Position Minimum Flicker Time",
					Default = 3,
				},
				YPosMaxOn = InstanceInput {
					SourceOp = "yPosSwitch_colorFlicker",
					Source = "MaximumOnTime",
					Name = "Y Position Maximum Flicker Time",
					Default = 10,
				},
				YPosRandSeed = InstanceInput {
					SourceOp = "yPosSwitch_colorFlicker",
					Source = "RandomSeed",
					Name = "Y Position Random Seed",
					Default = 0,
				},
				MinY = InstanceInput {
					SourceOp = "yPosSwitch_colorFlicker",
					Source = "MinimumYPosition",
					Default = -0.5,
				},
				MaxY = InstanceInput {
					SourceOp = "yPosSwitch_colorFlicker",
					Source = "MaximumYPosition",
					Default = 1.5,
				},
				ApplyMode = InstanceInput {
					SourceOp = "outputColorFlicker",
					Source = "ApplyMode",
					Page = "Controls",
				},
				Operator = InstanceInput {
					SourceOp = "outputColorFlicker",
					Source = "Operator",
				},
				SubtractiveAdditive = InstanceInput {
					SourceOp = "outputColorFlicker",
					Source = "SubtractiveAdditive",
					Name = "Subtractive",
					Default = 1,
				},
				Gain = InstanceInput {
					SourceOp = "outputColorFlicker",
					Source = "Gain",
					Default = 1,
				},
				BurnIn = InstanceInput {
					SourceOp = "outputColorFlicker",
					Source = "BurnIn",
					Default = 0,
				},
				Blend = InstanceInput {
					SourceOp = "outputColorFlicker",
					Source = "BlendClone",
					Default = 1,
				},
				EffectMask = InstanceInput {
					SourceOp = "outputColorFlicker",
					Source = "EffectMask",
				},
			},
			Outputs = {
				Output = InstanceOutput {
					SourceOp = "outputColorFlicker",
					Source = "Output",
				},
			},
			ViewInfo = GroupInfo { Pos = { 0, 0, }, },
			Tools = ordered() {
				inputColorFlicker = BrightnessContrast {
					CtrlWZoom = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0, },
						HueSeed = Input { Value = 258, },
					},
					ViewInfo = OperatorInfo { Pos = { -2805, 49.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
					UserControls = ordered() {
						XSize = {
							INP_Default = 1,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 2,
							LINKS_Name = "X Size",
						},
						YSize = {
							INP_Default = 1,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 2,
							LINKS_Name = "Y Size",
						},
						HueFlicker = {
							LINKID_DataType = "Number",
							INP_Default = 0,
							IC_ControlPage = 0,
							INPID_InputControl = "CheckboxControl",
							LINKS_Name = "Hue Flicker",
						},
						SaturationFlicker = {
							LINKID_DataType = "Number",
							INP_Default = 0,
							IC_ControlPage = 0,
							INPID_InputControl = "CheckboxControl",
							LINKS_Name = "Saturation Flicker",
						},
						LightnessFlicker = {
							LINKID_DataType = "Number",
							INP_Default = 0,
							IC_ControlPage = 0,
							INPID_InputControl = "CheckboxControl",
							LINKS_Name = "Lightness Flicker",
						},
						PositionFlicker = {
							LINKID_DataType = "Number",
							INP_Default = 1,
							IC_ControlPage = 0,
							INPID_InputControl = "CheckboxControl",
							LINKS_Name = "Position Flicker",
						},
						HueSeed = {
							INPID_PreviewControl = "",
							IC_ControlPage = 0,
							INPID_InputControl = "",
						},
						SynchronizeFlickers = {
							INPID_PreviewControl = "",
							IC_ControlPage = 0,
							INPID_InputControl = "",
						},
						BlockOnly = {
							LINKID_DataType = "Number",
							LINKS_Name = "Block Only",
							IC_ControlPage = 0,
							INPID_InputControl = "CheckboxControl",
							INP_Default = 0,
						},
					},
				},
				baseColor_colorFlicker = Background {
					NameSet = true,
					Inputs = {
						GlobalIn = Input { Value = 1, },
						Width = Input {
							Value = 991,
							Expression = "inputColorFlicker.Input.Width",
						},
						Height = Input {
							Value = 728,
							Expression = "inputColorFlicker.Input.Height",
						},
						["Gamut.SLogVersion"] = Input { Value = FuID { "SLog2", }, },
						TopLeftRed = Input { Value = 0.25, },
						Gradient = Input {
							Value = Gradient {
								Colors = {
									[0] = { 0, 0, 0, 1, },
									[1] = { 1, 1, 1, 1, },
								},
							},
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2750, 82.5, }, },
					Colors = { TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, }, },
				},
				initialPosition = Transform {
					CtrlWZoom = false,
					NameSet = true,
					Inputs = {
						Center = Input { Value = { 0.5, -0.015527950310559, }, },
						UseSizeAndAspect = Input { Value = 0, },
						XSize = Input { Expression = "inputColorFlicker.XSize", },
						YSize = Input { Expression = "inputColorFlicker.YSize", },
						Input = Input {
							SourceOp = "baseColor_colorFlicker",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2695, 115.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
				},
				hueSwitch_colorFlicker = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ":t0=0; randomseed(RandomSeed); while t0<=time do off=random(MinimumOffTime,MaximumOffTime); on=random(MinimumOnTime,MaximumOnTime); t=time-t0; t0=t0+on+off; end; n=t0-on; if t>off then return 1; else return 0; end",
						},
						Comments = Input { Value = "Randomly switches the Mix control between 0 and 1. Adjust the frequency of switching using the Max and Min sliders. \r\n\r\nMuse Effects Elements Library, Glitch Tools Collection\r\nby Bryan Ray.\r\nwww.musevfx.com", },
					},
					ViewInfo = OperatorInfo { Pos = { -2640, 148.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
					UserControls = ordered() {
						MinimumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum Off Time",
						},
						MaximumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum Off Time",
						},
						MinimumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum On Time",
						},
						MaximumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum On Time",
						},
						RandomSeed = {
							LINKID_DataType = "Number",
							LINKS_Name = "Random Seed",
							IC_ControlPage = 0,
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
						},
						MinimumHue = {
							LINKS_Name = "Minimum Hue",
							LINKID_DataType = "Number",
							INPID_InputControl = "ScrewControl",
							IC_ControlPage = 0,
							INP_MaxScale = 360,
							INP_Default = 0,
						},
						MaximumHue = {
							LINKID_DataType = "Number",
							INPID_InputControl = "ScrewControl",
							LINKS_Name = "Maximum Hue",
							IC_ControlPage = 0,
							INP_MaxScale = 360,
							INP_Default = 360,
						},
					},
				},
				satSwitch_colorFlicker = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ":t0=0; randomseed(RandomSeed); while t0<=time do off=random(MinimumOffTime,MaximumOffTime); on=random(MinimumOnTime,MaximumOnTime); t=time-t0; t0=t0+on+off; end; n=t0-on; if t>off then return 1; else return 0; end",
						},
						Comments = Input { Value = "Randomly switches the Mix control between 0 and 1. Adjust the frequency of switching using the Max and Min sliders. \r\n\r\nMuse Effects Elements Library, Glitch Tools Collection\r\nby Bryan Ray.\r\nwww.musevfx.com", },
					},
					ViewInfo = OperatorInfo { Pos = { -2585, 181.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
					UserControls = ordered() {
						MinimumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum Off Time",
						},
						MaximumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum Off Time",
						},
						MinimumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum On Time",
						},
						MaximumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum On Time",
						},
						RandomSeed = {
							LINKID_DataType = "Number",
							LINKS_Name = "Random Seed",
							IC_ControlPage = 0,
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
						},
						MinimumSaturation = {
							INP_MinAllowed = 0,
							INPID_InputControl = "SliderControl",
							LINKID_DataType = "Number",
							IC_ControlPage = 0,
							LINKS_Name = "Minimum Saturation",
							INP_Default = 0,
						},
						MaximumSaturation = {
							INP_Default = 2,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 2,
							LINKS_Name = "Maximum Saturation",
						},
					},
				},
				lightnessSwitch_colorFlicker = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ":t0=0; randomseed(RandomSeed); while t0<=time do off=random(MinimumOffTime,MaximumOffTime); on=random(MinimumOnTime,MaximumOnTime); t=time-t0; t0=t0+on+off; end; n=t0-on; if t>off then return 1; else return 0; end",
						},
						Comments = Input { Value = "Randomly switches the Mix control between 0 and 1. Adjust the frequency of switching using the Max and Min sliders. \r\n\r\nMuse Effects Elements Library, Glitch Tools Collection\r\nby Bryan Ray.\r\nwww.musevfx.com", },
					},
					ViewInfo = OperatorInfo { Pos = { -2530, 214.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
					UserControls = ordered() {
						MinimumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum Off Time",
						},
						MaximumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum Off Time",
						},
						MinimumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum On Time",
						},
						MaximumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum On Time",
						},
						RandomSeed = {
							LINKID_DataType = "Number",
							LINKS_Name = "Random Seed",
							IC_ControlPage = 0,
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
						},
						MinimumLightness = {
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum Lightness",
							IC_ControlPage = 0,
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
						},
						MaximumLightness = {
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							LINKS_Name = "Maximum Lightness",
							IC_ControlPage = 0,
							INP_MaxScale = 2,
							INP_Default = 1,
						},
					},
				},
				xPosSwitch_colorFlicker = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input { Expression = ":t0=0; randomseed(RandomSeed); while t0<=time do off=random(MinimumOffTime,MaximumOffTime); on=random(MinimumOnTime,MaximumOnTime); t=time-t0; t0=t0+on+off; end; n=t0-on; if t>off then return 1; else return 0; end", },
						Comments = Input { Value = "Randomly switches the Mix control between 0 and 1. Adjust the frequency of switching using the Max and Min sliders. \r\n\r\nMuse Effects Elements Library, Glitch Tools Collection\r\nby Bryan Ray.\r\nwww.musevfx.com", },
						RandomSeed = Input { Value = 0.1970588, },
					},
					ViewInfo = OperatorInfo { Pos = { -2475, 247.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
					UserControls = ordered() {
						MinimumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum Off Time",
						},
						MaximumOffTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum Off Time",
						},
						MinimumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 30,
							INP_Default = 3,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Minimum On Time",
						},
						MaximumOnTime = {
							INP_MaxAllowed = 10000,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 60,
							INP_Default = 10,
							INP_MinScale = 1,
							INP_MinAllowed = 0,
							LINKID_DataType = "Number",
							LINKS_Name = "Maximum On Time",
						},
						RandomSeed = {
							LINKID_DataType = "Number",
							LINKS_Name = "Random Seed",
							IC_ControlPage = 0,
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
						},
						MinimumXPosition = {
							INP_MinScale = -0.5,
							LINKS_Name = "Minimum X Position",
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_MaxScale = 1.5,
							INP_Default = -0.5,
						},
						MaximumXPosition = {
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							LINKS_Name = "Maximum X Position",
							IC_ControlPage = 0,
							INP_MaxScale = 1.5,
							INP_Default = 1.5,
						},
					},
				},
				yPosSwitch_colorFlicker = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = ":t0=0; randomseed(RandomSeed); while t0<=time do off=random(MinimumOffTime,MaximumOffTime); on=random(MinimumOnTime,MaximumOnTime); t=time-t0; t0=t0+on+off; end; n=t0-on; if t>off then return 1; else return 0; end",
						},
						Comments = Input { Value = "Randomly switches the Mix control between 0 and 1. Adjust the frequency of switching using the Max and Min sliders. \r\n\r\nMuse Effects Elements Library, Glitch Tools Collection\r\nby Bryan Ray.\r\nwww.musevfx.com", },
					},
					ViewInfo = OperatorInfo { Pos = { -2420, 280.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
					UserControls = ordered() {
						MinimumOffTime = {
							LINKS_Name = "Minimum Off Time",
							INP_MaxAllowed = 10000,
							INP_MaxScale = 30,
							INP_MinAllowed = 0,
							IC_ControlPage = 0,
							INP_Default = 3,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							LINKID_DataType = "Number",
						},
						MaximumOffTime = {
							LINKS_Name = "Maximum Off Time",
							INP_MaxAllowed = 10000,
							INP_MaxScale = 60,
							INP_MinAllowed = 0,
							IC_ControlPage = 0,
							INP_Default = 10,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							INP_MinScale = 1,
							LINKID_DataType = "Number",
						},
						MinimumOnTime = {
							LINKS_Name = "Minimum On Time",
							INP_MaxAllowed = 10000,
							INP_MaxScale = 30,
							INP_MinAllowed = 0,
							IC_ControlPage = 0,
							INP_Default = 3,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							LINKID_DataType = "Number",
						},
						MaximumOnTime = {
							LINKS_Name = "Maximum On Time",
							INP_MaxAllowed = 10000,
							INP_MaxScale = 60,
							INP_MinAllowed = 0,
							IC_ControlPage = 0,
							INP_Default = 10,
							INP_Integer = true,
							INPID_InputControl = "SliderControl",
							INP_MinScale = 1,
							LINKID_DataType = "Number",
						},
						RandomSeed = {
							LINKID_DataType = "Number",
							LINKS_Name = "Random Seed",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						MinimumYPosition = {
							IC_ControlPage = 0,
							INP_Default = -0.5,
							INP_MinScale = -0.5,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MaxScale = 1.5,
							LINKS_Name = "Minimum Y Position",
						},
						MaximumYPosition = {
							LINKS_Name = "Maximum Y Position",
							INP_MaxScale = 1.5,
							IC_ControlPage = 0,
							INP_Default = 1.5,
							INP_MinScale = -0.5,
							INPID_InputControl = "SliderControl",
							LINKID_DataType = "Number",
						},
					},
				},
				outputColorFlicker = Merge {
					CtrlWZoom = false,
					NameSet = true,
					Inputs = {
						Background = Input {
							SourceOp = "inputColorFlicker",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "lightnessSwitch",
							Source = "Output",
						},
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { -2365, 313.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
				},
				satFlicker = ColorCorrector {
					NameSet = true,
					Inputs = {
						WheelSaturation1 = Input {
							Value = 0.473566706775201,
							Expression = ":randomseed(satSwitch_colorFlicker.RandomSeed+time); myval=random(); min=satSwitch_colorFlicker.MinimumSaturation; max=satSwitch_colorFlicker.MaximumSaturation; myval = (max-min) * myval + min; if satSwitch_colorFlicker.Mix>0.5 then return myval; else return 0; end",
						},
						Saturation1 = Input { Expression = ":randomseed(satSwitch_colorFlicker.RandomSeed+time); myval=random(); min=satSwitch_colorFlicker.MinimumSaturation; max=satSwitch_colorFlicker.MaximumSaturation; myval = (max-min) * myval + min; if satSwitch_colorFlicker.Mix>0.5 then return myval; else return 0; end", },
						ColorRanges = Input {
							Value = ColorCurves {
								Curves = {
									{
										Points = {
											{ 0, 1, },
											{ 0.4, 0.2, },
											{ 0.6, 0, },
											{ 1, 0, },
										},
									},
									{
										Points = {
											{ 0, 0, },
											{ 0.4, 0, },
											{ 0.6, 0.2, },
											{ 1, 1, },
										},
									},
								},
							},
						},
						HistogramIgnoreTransparent = Input { Value = 1, },
						Input = Input {
							SourceOp = "hueSwitch",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2475, 412.5, }, },
				},
				hueFlicker = ColorCorrector {
					NameSet = true,
					Inputs = {
						WheelHue1 = Input {
							Value = 85.2420072195361,
							Expression = ":randomseed(hueSwitch_colorFlicker.RandomSeed+time); myval=random(); min=hueSwitch_colorFlicker.MinimumHue; max=hueSwitch_colorFlicker.MaximumHue; myval = (max-min) * myval + min; if hueSwitch_colorFlicker.Mix>0.5 then return myval; else return 0; end",
						},
						Hue1 = Input { Expression = ":randomseed(hueSwitch_colorFlicker.RandomSeed+time); myval=random(); min=hueSwitch_colorFlicker.MinimumHue; max=hueSwitch_colorFlicker.MaximumHue; myval = (max-min) * myval + min; if hueSwitch_colorFlicker.Mix>0.5 then return myval; else return 0; end", },
						ColorRanges = Input {
							Value = ColorCurves {
								Curves = {
									{
										Points = {
											{ 0, 1, },
											{ 0.4, 0.2, },
											{ 0.6, 0, },
											{ 1, 0, },
										},
									},
									{
										Points = {
											{ 0, 0, },
											{ 0.4, 0, },
											{ 0.6, 0.2, },
											{ 1, 1, },
										},
									},
								},
							},
						},
						HistogramIgnoreTransparent = Input { Value = 1, },
						Input = Input {
							SourceOp = "positionSwitch",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2640, 412.5, }, },
				},
				positionFlicker = Transform {
					NameSet = true,
					Inputs = {
						Center = Input {
							Value = { 0.177410809906792, 1.20436726935732, },
							Expression = "Point(XRandom+0.5,YRandom+0.5)",
						},
						Input = Input {
							SourceOp = "initialPosition",
							Source = "Output",
						},
						XRandom = Input {
							Value = -0.322589190093208,
							Expression = ":randomseed(xPosSwitch_colorFlicker.RandomSeed+time); myval=random(); min=xPosSwitch_colorFlicker.MinimumXPosition; max=xPosSwitch_colorFlicker.MaximumXPosition; myval = (max-min) * myval + min; if xPosSwitch_colorFlicker.Mix>0.5 then return myval; else return 0; end",
						},
						YRandom = Input {
							Value = 0.704367269357317,
							Expression = ":randomseed(yPosSwitch_colorFlicker.RandomSeed+time); myval=random(); min=yPosSwitch_colorFlicker.MinimumYPosition; max=yPosSwitch_colorFlicker.MaximumYPosition; myval = (max-min) * myval + min; if yPosSwitch_colorFlicker.Mix>0.5 then return myval; else return 0; end",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2805, 412.5, }, },
					UserControls = ordered() {
						XRandom = {
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
							IC_ControlPage = 0,
						},
						YRandom = {
							LINKID_DataType = "Number",
							INP_Default = 0,
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
						},
					},
				},
				lightnessFlicker = ColorCorrector {
					NameSet = true,
					Inputs = {
						MasterRGBGain = Input {
							Value = 0.2367833533876,
							Expression = ":randomseed(lightnessSwitch_colorFlicker.RandomSeed+time); myval=random(); min=lightnessSwitch_colorFlicker.MinimumLightness; max=lightnessSwitch_colorFlicker.MaximumLightness; myval = (max-min) * myval + min; if lightnessSwitch_colorFlicker.Mix>0.5 then return myval; else return 0; end",
						},
						ColorRanges = Input {
							Value = ColorCurves {
								Curves = {
									{
										Points = {
											{ 0, 1, },
											{ 0.4, 0.2, },
											{ 0.6, 0, },
											{ 1, 0, },
										},
									},
									{
										Points = {
											{ 0, 0, },
											{ 0.4, 0, },
											{ 0.6, 0.2, },
											{ 1, 1, },
										},
									},
								},
							},
						},
						HistogramIgnoreTransparent = Input { Value = 1, },
						Input = Input {
							SourceOp = "satSwitch",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2310, 412.5, }, },
				},
				lightnessSwitch = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = "inputColorFlicker.LightnessFlicker",
						},
						Background = Input {
							SourceOp = "satSwitch",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "lightnessFlicker",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2310, 478.5, }, },
				},
				hueSwitch = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = "inputColorFlicker.HueFlicker",
						},
						Background = Input {
							SourceOp = "positionSwitch",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "hueFlicker",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2640, 478.5, }, },
				},
				positionSwitch = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input { Expression = "inputColorFlicker.PositionFlicker", },
						Background = Input {
							SourceOp = "initialPosition",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "positionFlicker",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2805, 478.5, }, },
				},
				satSwitch = Dissolve {
					Transitions = {
						[0] = "DFTDissolve",
					},
					NameSet = true,
					Inputs = {
						Mix = Input {
							Value = 0,
							Expression = "inputColorFlicker.SaturationFlicker",
						},
						Background = Input {
							SourceOp = "hueSwitch",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "satFlicker",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -2475, 478.5, }, },
				},
			},
		},
	},
	ActiveTool = "MT_Glitch_ColorFlicker",
}