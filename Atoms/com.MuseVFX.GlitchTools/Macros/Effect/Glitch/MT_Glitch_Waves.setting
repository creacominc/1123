{
	Tools = ordered() {
		MT_Glitch_Waves = MacroOperator {
			Inputs = ordered() {
					Comments = Input {
					Value = "A collection of wave-generating expressions.\r\n\r\nMuse Tools, Glitch Tools Collection\r\nby Bryan Ray\r\nwww.musevfx.com",
				},

				Sin = InstanceInput {
					SourceOp = "Waves",
					Source = "SineWave",
					Expression = "(sin(2*pi*time/Period) + 1) / 2 * (Maximum-Minimum) + Minimum",
					Default = 0.9829629131445,
				},
				Triangle = InstanceInput {
					SourceOp = "Waves",
					Source = "TriangleWave",
					Expression = "(asin(sin(2*pi*time/Period))/pi+0.5) * (Maximum-Minimum) + Minimum",
					Default = 0.9166666666667,
				},
				Square = InstanceInput {
					SourceOp = "Waves",
					Source = "SquareWave",
					Expression = "floor(SineWave + 0.5)",
					Default = 1,
				},
				Sawtooth = InstanceInput {
					SourceOp = "Waves",
					Source = "SawtoothWave",
					Expression = "(time%Period)/Period *  (Maximum-Minimum) + Minimum",
					Default = 0.2916666666667,
				},
				Parabolic = InstanceInput {
					SourceOp = "Waves",
					Source = "ParabolicSawtoothWave",
					Expression = "sin(( (pi*time) / (2*Period) ) % (pi/2)) *  (Maximum-Minimum) + Minimum",
					Default = 0.442288690219,
				},
				ReverseParabolic = InstanceInput {
					SourceOp = "Waves",
					Source = "ReversedParabolicSawtoothWave",
					Expression = "cos(( (pi*time) / (2*Period) ) % (pi/2)) * (Maximum-Minimum) + Minimum",
					Default = 0.8968727415327,
				},
				Exponential = InstanceInput {
					SourceOp = "Waves",
					Source = "ExponentialSawtoothWave",
					Expression = "(exp((2*pi*(time % Period))/Period) - 1)/exp(2*pi)",
					Default = 0.0098042406716,
				},
				Bounce = InstanceInput {
					SourceOp = "Waves",
					Source = "BounceWave",
					Expression = "abs(sin(pi*time/Period)) *  (Maximum-Minimum) + Minimum",
					Default = 0.7933533402912,
				},
				Min = InstanceInput {
					SourceOp = "Waves",
					Source = "Minimum",
					Default = 0,
				},
				Max = InstanceInput {
					SourceOp = "Waves",
					Source = "Maximum",
					Default = 1,
				},
				Period = InstanceInput {
					SourceOp = "Waves",
					Source = "Period",
					Default = 24,
				},
			},
			ViewInfo = GroupInfo { Pos = { 0, 0, }, },
			Tools = ordered() {
				Waves = BrightnessContrast {
					CtrlWZoom = false,
					NameSet = true,
					Inputs = {
						Blend = Input { Value = 0, },
						ProcessRed = Input { Value = 0, },
						ProcessGreen = Input { Value = 0, },
						ProcessBlue = Input { Value = 0, },
						ProcessAlpha = Input { Value = 0, },
						Red = Input { Value = 1, },
						Green = Input { Value = 1, },
						Blue = Input { Value = 1, },
						Gain = Input { Value = 1, },
						Gamma = Input { Value = 1, },
						Saturation = Input { Value = 1, },
						High = Input { Value = 1, },
						SineWave = Input {
							Value = 0.982962913144534,
							Expression = "(sin(2*pi*time/Period) + 1) / 2 * (Maximum-Minimum) + Minimum",
						},
						TriangleWave = Input {
							Value = 0.916666666666667,
							Expression = "(asin(sin(2*pi*time/Period))/pi+0.5) * (Maximum-Minimum) + Minimum",
						},
						SquareWave = Input {
							Value = 1,
							Expression = "floor(SineWave + 0.5)",
						},
						SawtoothWave = Input {
							Value = 0.291666666666667,
							Expression = "(time%Period)/Period *  (Maximum-Minimum) + Minimum",
						},
						ParabolicSawtoothWave = Input {
							Value = 0.442288690219001,
							Expression = "sin(( (pi*time) / (2*Period) ) % (pi/2)) *  (Maximum-Minimum) + Minimum",
						},
						ReversedParabolicSawtoothWave = Input {
							Value = 0.896872741532688,
							Expression = "cos(( (pi*time) / (2*Period) ) % (pi/2)) * (Maximum-Minimum) + Minimum",
						},
						ExponentialSawtoothWave = Input {
							Value = 0.00980424067164143,
							Expression = "(exp((2*pi*(time % Period))/Period) - 1)/exp(2*pi)",
						},
						BounceWave = Input {
							Value = 0.793353340291235,
							Expression = "abs(sin(pi*time/Period)) *  (Maximum-Minimum) + Minimum",
						},
						Blip = Input { Expression = "iif( (((time+Period) % (Period+BlipLength) / Period) * (Period/BlipLength) - (Period/BlipLength)) >= 0,Maximum,Minimum)", },
					},
					ViewInfo = OperatorInfo { Pos = { -1980, -280.5, }, },
					Colors = {
						TileColor = { R = 0.498039215686275, G = 0.498039215686275, B = 1, },
						TextColor = { R = 0, G = 0, B = 0, },
					},
					UserControls = ordered() {
						Red = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Green = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Blue = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Alpha = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Gain = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Lift = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Gamma = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Contrast = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Brightness = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Saturation = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Low = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						High = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						Direction = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						ClipBlack = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						ClipWhite = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						PreDividePostMultiply = {
							INPID_PreviewControl = "",
							INPID_InputControl = "",
							IC_ControlPage = 0,
						},
						SineWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Sine Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						TriangleWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Triangle Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						SquareWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Square Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						SawtoothWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Sawtooth Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						ParabolicSawtoothWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Parabolic Sawtooth Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						ReversedParabolicSawtoothWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Reversed Parabolic Sawtooth Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						ExponentialSawtoothWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Exponential Sawtooth Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						BounceWave = {
							LINKID_DataType = "Number",
							LINKS_Name = "Bounce Wave",
							INPID_InputControl = "SliderControl",
							IC_ControlPage = 0,
							INP_Default = 0,
						},
						Blip = {
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
							IC_ControlPage = 0,
						},
						SineBlip = {
							LINKID_DataType = "Number",
							INP_Default = 0,
							INPID_InputControl = "SliderControl",
							LINKS_Name = "Sine Blip",
							IC_ControlPage = 0,
						},
						Minimum = {
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
							IC_ControlPage = 0,
						},
						Maximum = {
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_Default = 1,
							IC_ControlPage = 0,
						},
						Period = {
							IC_ControlPage = 0,
							INP_Default = 24,
							INP_MinScale = 2,
							INPID_InputControl = "SliderControl",
							INP_MaxScale = 120,
							LINKID_DataType = "Number",
						},
						BlipLength = {
							IC_ControlPage = 0,
							INP_Default = 2,
							LINKS_Name = "Blip Length",
							INPID_InputControl = "SliderControl",
							INP_MaxScale = 60,
							LINKID_DataType = "Number",
						},
					},
				},
			},
		},
	},
	ActiveTool = "MT_Glitch_Waves",
}