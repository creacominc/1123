Atom {
	Name = "FFmpeg Permissions",
	Category = "Bin",
	Author = "We Suck Less",
	Version = 1,
	Date = {2018, 2, 25},
	Description = [[<p>The "FFmpeg Permissions" atom adjusts the MacOS disk permissions for FFmpeg so the program is executable from Fusion's Lua scripting language with the os.execute() function.</p>]],
	Deploy = {
	},
	InstallScript = {
		Windows = {
			[[-- Add an FFmpeg PathMap entry called:
-- ["FFmpeg:"] = "Reactor:/Deploy/Bin/ffmpeg/bin/"
if platform ~= 'Linux' then
	local ffmpegPrefEntry = 'Global.Paths.Map.FFmpeg:'
	local ffmpegReactorPath = 'Reactor:/Deploy/Bin/ffmpeg/bin/'
	local ffmpegFound = app:GetPrefs(ffmpegPrefEntry)

	if ffmpegFound and ffmpegFound:find(ffmpegReactorPath) then
		dprintf('[FFmpeg PathMap] Existing Entry Found for: ' .. ffmpegReactorPath .. '"\n')
	else
		dprintf('[FFmpeg PathMap] Added Entry: "' .. ffmpegReactorPath .. '"\n')
		app:SetPrefs(ffmpegPrefEntry, ffmpegReactorPath)
		app:SavePrefs()
	end
end

-- Turn on executable permissions for the MacOS FFmpeg program so the command line tool can be used from Fusion:
if platform == 'Mac' then
	command = 'chmod -R 755 "' .. app:MapPath('Reactor:/Deploy/Bin/ffmpeg/bin/') .. '"'
	dprintf('[Permissions Update] ' .. command .. '\n')
	os.execute(command)
end]],
		},
		Mac = {
			[[-- Add an FFmpeg PathMap entry called:
-- ["FFmpeg:"] = "Reactor:/Deploy/Bin/ffmpeg/bin/"
if platform ~= 'Linux' then
	local ffmpegPrefEntry = 'Global.Paths.Map.FFmpeg:'
	local ffmpegReactorPath = 'Reactor:/Deploy/Bin/ffmpeg/bin/'
	local ffmpegFound = app:GetPrefs(ffmpegPrefEntry)

	if ffmpegFound and ffmpegFound:find(ffmpegReactorPath) then
		dprintf('[FFmpeg PathMap] Existing Entry Found for: ' .. ffmpegReactorPath .. '"\n')
	else
		dprintf('[FFmpeg PathMap] Added Entry: "' .. ffmpegReactorPath .. '"\n')
		app:SetPrefs(ffmpegPrefEntry, ffmpegReactorPath)
		app:SavePrefs()
	end
end

-- Turn on executable permissions for the MacOS FFmpeg program so the command line tool can be used from Fusion:
if platform == 'Mac' then
	command = 'chmod -R 755 "' .. app:MapPath('Reactor:/Deploy/Bin/ffmpeg/bin/') .. '"'
	dprintf('[Permissions Update] ' .. command .. '\n')
	os.execute(command)
end]],
		},
	},
	UninstallScript = {
		Windows = {
			[[-- Remove an FFmpeg PathMap entry called:
-- ["FFmpeg:"] = "Reactor:/Deploy/Bin/ffmpeg/bin/"

local ffmpegPrefEntry = 'Global.Paths.Map.FFmpeg:'
local ffmpegReactorPath = 'Reactor:/Deploy/Bin/ffmpeg/bin/'

if app:GetPrefs(ffmpegPrefEntry) and app:GetPrefs(ffmpegPrefEntry):find(ffmpegReactorPath) then
	dprintf('[FFmpeg PathMap] Removed Entry: "' .. ffmpegReactorPath .. '"\n')
	app:SetPrefs(ffmpegPrefEntry, '')
	app:SavePrefs()
else
	dprintf('[FFmpeg PathMap] No Entry Found for: ' .. ffmpegReactorPath .. '"\n')
end]],
		},
		Mac = {
			[[-- Remove an FFmpeg PathMap entry called:
-- ["FFmpeg:"] = "Reactor:/Deploy/Bin/ffmpeg/bin/"

local ffmpegPrefEntry = 'Global.Paths.Map.FFmpeg:'
local ffmpegReactorPath = 'Reactor:/Deploy/Bin/ffmpeg/bin/'

if app:GetPrefs(ffmpegPrefEntry) and app:GetPrefs(ffmpegPrefEntry):find(ffmpegReactorPath) then
	dprintf('[FFmpeg PathMap] Removed Entry: "' .. ffmpegReactorPath .. '"\n')
	app:SetPrefs(ffmpegPrefEntry, '')
	app:SavePrefs()
else
	dprintf('[FFmpeg PathMap] No Entry Found for: ' .. ffmpegReactorPath .. '"\n')
end]],
		},
	},
}
